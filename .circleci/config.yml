version: 2

# References are blocks of configurations that we can reference and reuse.
references:

  # Workspaces represent the spaces we work on & are useful for sharing data between jobs.
  # Create a workspace with the ~/code directory.
  workspace: &workspace
    ~/code

  # Docker Image Configs
  android_config: &android_config
    working_directory: *workspace
    docker:
      - image: circleci/android:api-28-alpha
    environment:
      TERM: dumb
      _JAVA_OPTIONS: "-Xmx3200m -XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap"
      GRADLE_OPTS: '-Dorg.gradle.jvmargs="-Xmx3200m"'

  # Cache - a cache mechanism for our dependencies
  gradle_key: &gradle_key
    jars-{{ checksum "gradle/wrapper/gradle-wrapper.properties" }}-{{ checksum "build.gradle" }}-{{ checksum "app/build.gradle" }}


  restore_gradle_cache: &restore_gradle_cache
    restore_cache:
      key: *gradle_key

  save_gradle_cache: &save_gradle_cache
    save_cache:
      paths:
        - ~/.gradle
        - ~/.m2
      key: *gradle_key


  # Dependencies
  android_dependencies: &android_dependencies
    run:
      name: Download Android Dependencies
      command:         
          sudo chmod +x ./gradlew
          ./gradlew androidDependencies

  # Keys
  decode_android_key: &decode_android_key
    run:
      name: Decode Android Keystore
      command: echo $KEYSTORE_PATH | base64 -d | tee fastlane-droid.jks app/fastlane-droid.jks >/dev/null

  # ---------------------------------------------------------------------------------------------------------------------
  # DECODE FIREBASE GOOGLE_SERVICE_JSON FILE AND WRITE IT TO A FILE
  # ---------------------------------------------------------------------------------------------------------------------
  decode_gservices_key: &decode_gservices_key
    run:
      name: Decode Google Services JSON key
      command: |
        echo $GOOGLE_SERVICES_JSON | base64 -d | tee app/google-services.json app/src/mock/google-services.json app/src/prod/google-services.json app/src/dev/google-services.json app/src/qa/google-services.json >/dev/null

jobs:

  ## Run unit tests
  test_unit:
    <<: *android_config
    steps:
      - checkout
      - *restore_gradle_cache
      - *android_dependencies
      - *save_gradle_cache
      - *decode_gservices_key
      - run:
          name: Run unit tests
          command: |
            if [ -z "$CIRCLE_PULL_REQUEST" != "" ]; then
              echo "Doing a Pull Request Build for ${CIRCLE_PULL_REQUEST}."
              bundle exec fastlane unit_tests build_flavor:"dev" build_type:"debug"
            elif [ "${CIRCLE_BRANCH}" == "main" ]; then
              echo "Doing a Build on the ${CIRCLE_BRANCH} branch."
              bundle exec fastlane unit_tests build_flavor:"qa" build_type:"debug"
            elif [[ "${CIRCLE_BRANCH}" =~ ^release-.*$ ]];  then
              echo "Doing a Build on the ${CIRCLE_BRANCH} branch."
              bundle exec fastlane unit_tests build_flavor:"prod" build_type:"release"
            else
              echo "Doing a default Build on the ${CIRCLE_BRANCH} branch."
              bundle exec fastlane unit_tests build_flavor:"dev" build_type:"debug"
            fi
      - store_artifacts:
           path: app/build/reports/
           destination: /reports/
      - store_test_results:
          path: app/build/test_results/
          # destination: /test-results/
  # playstore_deployment:
  #   <<: *android_config
  #   steps:
  #     - checkout
  #     - *restore_gradle_cache
  #     - *restore_gems_cache
  #     - *android_dependencies
  #     - *save_gradle_cache
  #     - *decode_gservices_key
  #     - *decode_android_key
  #     - run:
  #         name: Upload Signed APK to Internal Test Track
  #         command: bundle exec fastlane playstore build_flavor:"prod" build_type:"release"

workflows:
  version: 2
  workflow:

    # Jobs that will run when you push to your repo
    jobs:
      - test_unit
      # - playstore_deployment:
      #     filters:
      #       branches:
      #         only:
      #           - /^release-[0-9]+\.[0-9]+\.[0-9]+$/
      #     requires:
      #       - test_unit